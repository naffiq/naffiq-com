{"version":3,"sources":["webpack:///./src/components/DemoSlider/DemoSliderComponents.tsx","webpack:///./src/components/DemoSlider/Container.tsx","webpack:///./src/components/DemoSlider/ProjectCard.tsx","webpack:///./src/components/DemoSlider/projects.ts","webpack:///./src/components/DemoSlider/index.tsx","webpack:///./src/components/DemoSlider/hooks.ts","webpack:///./src/pages/index.tsx"],"names":["DemoIFrame","styled","iframe","DemoFooterContainer","a","Container","SliderControls","div","SliderLink","props","disabled","DemoContainer","section","ProjectCard","ProjectCardHeader","h1","ProjectCardBody","p","ProjectCardMenu","ul","ProjectCardMenuItem","li","title","slug","description","iframeUrl","links","label","url","DemoSlider","useState","projectIdx","setProjectIdx","hasNextSlide","projects","length","hasPrevSlide","project","onNextSlideClick","onPrevSlideClick","useProjectSlider","src","map","link","idx","key","target","rel","href","onClick","context","render","React"],"mappings":"0MAIaA,EAAaC,IAAOC,OAAV,uFAAGD,CAAH,4GAYVE,GAFWF,IAAOG,EAAV,qFAAGH,CAAH,MAEcA,YAAOI,KAAV,gGAAGJ,CAAH,mKAanBK,EAAiBL,IAAOM,IAAV,2FAAGN,CAAH,kIAYdO,EAAaP,IAAOG,EAAV,uFAAGH,CAAH,uSAGX,SAAAQ,GAAK,OAAKA,EAAMC,SAAW,UAAY,aACxC,SAAAD,GAAK,OAAKA,EAAMC,SAAW,UAAY,aCvCnCC,EAJOV,IAAOW,QAAV,+EAAGX,CAAH,gCCAbY,EAAcZ,IAAOM,IAAV,iEAAGN,CAAH,yPAqBJa,EAAoBb,IAAOc,GAAV,oFAAGd,CAAH,8GAWjBe,EAAkBf,IAAOgB,EAAV,kFAAGhB,CAAH,6GASfiB,EAAkBjB,IAAOkB,GAAV,kFAAGlB,CAAH,kDAMfmB,EAAsBnB,IAAOoB,GAAV,sFAAGpB,CAAH,wBAIjBY,I,YCrDA,GACb,CACES,MAAO,eACPC,KAAM,eACNC,YAAa,2BACbC,UAAW,yCACXC,MAAO,CACL,CACEC,MAAO,cACPC,IAAK,4CAIX,CACEN,MAAO,SACPC,KAAM,SACNC,YAAa,wBACbC,UAAW,mCACXC,MAAO,CACL,CACEC,MAAO,cACPC,IAAK,sCAIX,CACEN,MAAO,aACPC,KAAM,WACNC,YAAa,4BACbC,UAAW,qCACXC,MAAO,CACL,CACEC,MAAO,cACPC,IAAK,wCAIX,CACEN,MAAO,4BACPC,KAAM,cACNC,YAAa,kDACbC,UAAW,wCACXC,MAAO,CACL,CACEC,MAAO,cACPC,IAAK,2CAIX,CACEN,MAAO,YACPC,KAAM,cACNC,YACE,iFACFC,UAAW,wCACXC,MAAO,CACL,CACEC,MAAO,cACPC,IAAK,4CCKEC,EA7CI,WAAM,MCfO,WAAM,MACAC,mBAAS,GAAtCC,EAD6B,KACjBC,EADiB,KAG9BC,EAAeF,EAAaG,EAASC,OAAS,EAC9CC,EAAeL,EAAa,EAYlC,MAAO,CACLM,QAfcH,EAASH,GAgBvBE,eACAG,eACAE,iBAfuB,WACnBL,GACFD,EAAcD,EAAa,IAc7BQ,iBAXuB,WACnBH,GACFJ,EAAcD,EAAa,KDU3BS,GALFH,EAFqB,EAErBA,QACAJ,EAHqB,EAGrBA,aACAG,EAJqB,EAIrBA,aACAE,EALqB,EAKrBA,iBACAC,EANqB,EAMrBA,iBAGF,OACE,gBAAC,EAAD,KACE,gBAACvC,EAAD,CAAYyC,IAAKJ,EAAQZ,UAAWH,MAAOe,EAAQf,QAEnD,2BACE,gBAACnB,EAAD,KACE,gBAAC,EAAD,KACE,gBAACW,EAAD,KAAoBuB,EAAQf,OAC5B,gBAACN,EAAD,KAAkBqB,EAAQb,aAE1B,gBAACN,EAAD,KACGmB,EAAQX,MAAMgB,KAAI,SAACC,EAAMC,GAAP,OACjB,gBAACxB,EAAD,CAAqByB,IAAKD,GACxB,gBAAC,IAAD,CAAGE,OAAO,SAASC,IAAI,sBAAsBC,KAAML,EAAKf,KACrDe,EAAKhB,aAOhB,gBAACrB,EAAD,KACE,gBAACE,EAAD,CAAYE,UAAW0B,EAAca,QAASV,GAA9C,cAIA,gBAAC/B,EAAD,CAAYE,UAAWuB,EAAcgB,QAASX,GAA9C,e,cEnCV,WAAY7B,EAAuByC,GAAc,OAC/C,YAAMzC,EAAOyC,IADkC,K,oCAG1CC,OAAP,WACE,OACE,gBAAC,IAAD,KACE,gBAAC,EAAD,Q,GAPqBC","file":"component---src-pages-index-tsx-20380e9a4a1c95ed303f.js","sourcesContent":["import styled from \"styled-components\";\nimport Link from \"../Link\";\nimport Container from \"../Container\";\n\nexport const DemoIFrame = styled.iframe`\n  width: 100%;\n  height: calc(100% - 200px);\n  border: none;\n\n  @media (min-width: 1024px) {\n    height: calc(100% - 180px);\n  }\n`;\n\nexport const DemoLink = styled.a``;\n\nexport const DemoFooterContainer = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  flex-direction: column-reverse;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const SliderControls = styled.div`\n  display: flex;\n  justify-content: space-around;\n  padding: 16px 0;\n  width: 100%;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    width: auto;\n  }\n`;\n\nexport const SliderLink = styled.a<{ disabled?: boolean }>`\n  line-height: 40px;\n  font-size: 16px;\n  cursor: ${props => (props.disabled ? \"default\" : \"pointer\")};\n  color: ${props => (props.disabled ? \"#e1e1e1\" : \"#fc4275\")};\n\n  font-weight: 800;\n  padding: 0 16px;\n\n  :last-of-type {\n    text-align: right;\n  }\n\n  @media (min-width: 768px) and (max-width: 1199px) {\n    line-height: 80px;\n    font-size: 24px;\n  }\n\n  @media (min-width: 1200px) {\n    line-height: 180px;\n    font-size: 24px;\n\n    :last-of-type {\n      margin-left: 40px;\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nconst DemoContainer = styled.section`\n  height: calc(100% - 100px);\n`;\n\nexport default DemoContainer;\n","import styled from \"styled-components\";\n\nconst ProjectCard = styled.div`\n  z-index: 1;\n  position: relative;\n  background-color: #fff;\n  padding: 16px;\n  width: calc(100% - 32px);\n\n  @media (min-width: 768px) and (max-width: 1023px) {\n    max-width: 50%;\n  }\n\n  @media (min-width: 1024px) {\n    padding: 25px 40px;\n    width: auto;\n\n    min-width: 450px;\n    top: -58px;\n    left: -40px;\n  }\n`;\n\nexport const ProjectCardHeader = styled.h1`\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: 800;\n\n  @media (min-width: 768px) {\n    font-size: 28px;\n  }\n`;\n\nexport const ProjectCardBody = styled.p`\n  font-family: \"PlayFair Display\";\n  margin-top: 10px;\n  font-size: 16px;\n  @media (min-width: 768px) {\n    font-size: 22px;\n  }\n`;\n\nexport const ProjectCardMenu = styled.ul`\n  list-style: none;\n  display: flex;\n  padding-left: 0;\n`;\n\nexport const ProjectCardMenuItem = styled.li`\n  margin-right: 15px;\n`;\n\nexport default ProjectCard;\n","export default [\n  {\n    title: \"little-synth\",\n    slug: \"little-synth\",\n    description: \"Tone.js synth experiment\",\n    iframeUrl: \"https://naffiq.github.io/little-synth/\",\n    links: [\n      {\n        label: \"Source code\",\n        url: \"https://github.com/naffiq/little-synth\"\n      }\n    ]\n  },\n  {\n    title: \"Eblett\",\n    slug: \"eblett\",\n    description: \"Molly @ Haarlem, 2018\",\n    iframeUrl: \"https://naffiq.github.io/eblett/\",\n    links: [\n      {\n        label: \"Source code\",\n        url: \"https://github.com/naffiq/eblett\"\n      }\n    ]\n  },\n  {\n    title: \"Motherland\",\n    slug: \"3d-globe\",\n    description: \"First three.js experiment\",\n    iframeUrl: \"https://naffiq.github.io/3d-globe/\",\n    links: [\n      {\n        label: \"Source code\",\n        url: \"https://github.com/naffiq/3d-globe\"\n      }\n    ]\n  },\n  {\n    title: \"The world we're living in\",\n    slug: \"bubble-data\",\n    description: \"Styding D3.js by Demographic data visualization\",\n    iframeUrl: \"https://naffiq.github.io/bubble-data/\",\n    links: [\n      {\n        label: \"Source code\",\n        url: \"https://github.com/naffiq/bubble-data\"\n      }\n    ]\n  },\n  {\n    title: \"TicTacToe\",\n    slug: \"tic-tac-toe\",\n    description:\n      \"Small React app used to polish Jest. (Uses heroku, might take a while to load)\",\n    iframeUrl: \"https://naffiq.github.io/tic-tac-toe/\",\n    links: [\n      {\n        label: \"Source code\",\n        url: \"https://github.com/naffiq/tic-tac-toe\"\n      }\n    ]\n  }\n];\n","import * as React from \"react\";\nimport projects from \"./projects\";\nimport {\n  DemoIFrame,\n  SliderControls,\n  SliderLink,\n  DemoFooterContainer\n} from \"./DemoSliderComponents\";\nimport DemoContainer from \"./Container\";\nimport ProjectCard, {\n  ProjectCardHeader,\n  ProjectCardBody,\n  ProjectCardMenu,\n  ProjectCardMenuItem\n} from \"./ProjectCard\";\nimport { A } from \"../Link\";\nimport { useProjectSlider } from \"./hooks\";\n\nconst DemoSlider = () => {\n  const {\n    project,\n    hasNextSlide,\n    hasPrevSlide,\n    onNextSlideClick,\n    onPrevSlideClick\n  } = useProjectSlider();\n\n  return (\n    <DemoContainer>\n      <DemoIFrame src={project.iframeUrl} title={project.title} />\n\n      <div>\n        <DemoFooterContainer>\n          <ProjectCard>\n            <ProjectCardHeader>{project.title}</ProjectCardHeader>\n            <ProjectCardBody>{project.description}</ProjectCardBody>\n\n            <ProjectCardMenu>\n              {project.links.map((link, idx) => (\n                <ProjectCardMenuItem key={idx}>\n                  <A target=\"_blank\" rel=\"noopener noreferrer\" href={link.url}>\n                    {link.label}\n                  </A>\n                </ProjectCardMenuItem>\n              ))}\n            </ProjectCardMenu>\n          </ProjectCard>\n\n          <SliderControls>\n            <SliderLink disabled={!hasPrevSlide} onClick={onPrevSlideClick}>\n              ← previous\n            </SliderLink>\n\n            <SliderLink disabled={!hasNextSlide} onClick={onNextSlideClick}>\n              next →\n            </SliderLink>\n          </SliderControls>\n        </DemoFooterContainer>\n      </div>\n    </DemoContainer>\n  );\n};\n\nexport default DemoSlider;\n","import { useState } from \"react\";\nimport projects from \"./projects\";\n\nexport const useProjectSlider = () => {\n  const [projectIdx, setProjectIdx] = useState(0);\n  const project = projects[projectIdx];\n  const hasNextSlide = projectIdx < projects.length - 1;\n  const hasPrevSlide = projectIdx > 0;\n  const onNextSlideClick = () => {\n    if (hasNextSlide) {\n      setProjectIdx(projectIdx + 1);\n    }\n  };\n  const onPrevSlideClick = () => {\n    if (hasPrevSlide) {\n      setProjectIdx(projectIdx - 1);\n    }\n  };\n\n  return {\n    project,\n    hasNextSlide,\n    hasPrevSlide,\n    onNextSlideClick,\n    onPrevSlideClick\n  };\n};\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport DefaultLayout from \"../layouts\";\nimport DemoSlider from \"../components/DemoSlider\";\n\n// Please note that you can use https://github.com/dotansimha/graphql-code-generator\n// to generate all types from graphQL schema\ninterface IndexPageProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n      };\n    };\n  };\n}\n\nexport default class extends React.Component<IndexPageProps, {}> {\n  constructor(props: IndexPageProps, context: any) {\n    super(props, context);\n  }\n  public render() {\n    return (\n      <DefaultLayout>\n        <DemoSlider />\n      </DefaultLayout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}