{"version":3,"sources":["webpack:///./src/components/Typography.tsx","webpack:///./src/components/Blog/BlogListItem.tsx","webpack:///./src/components/Blog/BlogHeader.tsx","webpack:///./src/pages/blog/index.tsx"],"names":["Paragraph","styled","span","p","Heading1","h1","Heading3","h2","h3","PostContainer","article","DateContainer","div","TitleContainer","BlogListItem","props","path","title","date","excerpt","Link","to","BlogHeaderContainer","RSSLink","A","BlogHeader","href","target","BlogPage","posts","data","allMarkdownRemark","edges","Container","narrow","map","node","frontmatter","key"],"mappings":"6FAAA,sHAMaA,GAJcC,IAAOC,KAAV,8EAAGD,CAAH,mCAICA,IAAOE,EAAV,4EAAGF,CAAH,oEAMTG,EAAWH,IAAOI,GAAV,2EAAGJ,CAAH,MAERK,GADWL,IAAOM,GAAV,2EAAGN,CAAH,MACGA,IAAOO,GAAV,2EAAGP,CAAH,Q,qHCmBfQ,EAAgBR,IAAOS,QAAV,kFAAGT,CAAH,yDAIfK,KAIEK,EAAgBV,IAAOW,IAAV,kFAAGX,CAAH,mGAObY,EAAiBZ,IAAOW,IAAV,mFAAGX,CAAH,aAILa,EAxCkD,SAACC,GAAU,IACnEC,EAA8BD,EAA9BC,KAAMC,EAAwBF,EAAxBE,MAAOC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,QAC1B,OACE,gBAACV,EAAD,KACE,gBAACE,EAAD,KACGO,GAAQ,6BAAQA,IAEnB,gBAACL,EAAD,KACE,gBAACO,EAAA,EAAD,CAAMC,GAAIL,GACR,gBAAC,IAAD,KACIC,IAGN,gBAAC,IAAD,KACIE,MCrBNG,EAAsBrB,IAAOW,IAAV,sFAAGX,CAAH,2IAYnBsB,EAAUtB,YAAOuB,KAAV,0EAAGvB,CAAH,mBAKE,SAASwB,IAEtB,OACE,gBAACH,EAAD,KACE,gBAAC,IAAD,2BACA,gBAACC,EAAD,CAASG,KAAK,WAAWC,OAAO,SAAhC,aCqBSC,UAtBE,SAAC,GAA0B,IAC3BC,EAD2B,EAAzBC,KACcC,kBAAvBC,MACR,OACE,gBAAC,IAAD,KACE,gBAACC,EAAA,EAAD,CAAWC,QAAM,GACf,gBAACD,EAAA,EAAD,KACE,gBAACR,EAAD,MAEEI,EAAMM,KAAI,gBAAEC,EAAF,EAAEA,KAAF,OAAa,gBAAC,EAAD,CACrBpB,KAAMoB,EAAKC,YAAYrB,KACvBC,MAAOmB,EAAKC,YAAYpB,MACxBC,KAAMkB,EAAKC,YAAYnB,KACvBC,QAASiB,EAAKC,YAAYlB,QAC1BmB,IAAKF,EAAKC,YAAYnB","file":"component---src-pages-blog-index-tsx-2f37e70af6fb3317cea9.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const LineThrough = styled.span`\n  text-decoration: line-through;\n`;\n\nexport const Paragraph = styled.p`\n  font-family: 'Lora', serif;\n  line-height: 1.8rem;\n  font-size: 1.1rem;\n`;\n\nexport const Heading1 = styled.h1``;\nexport const Heading2 = styled.h2``;\nexport const Heading3 = styled.h3``;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { Link } from '../Link';\nimport { Heading3, Paragraph } from '../Typography';\n\nexport interface BlogListItemProps {\n  path: string;\n  title: string;\n  date: string;\n  excerpt?: string;\n}\n\nconst BlogListItem: React.FunctionComponent<BlogListItemProps> = (props) => {\n  const {path, title, date, excerpt} = props;\n  return (\n    <PostContainer>\n      <DateContainer>\n        {date && <small>{date}</small>}\n      </DateContainer>\n      <TitleContainer>\n        <Link to={path}>\n          <Heading3>\n            { title }\n          </Heading3>\n        </Link>\n        <Paragraph>\n          { excerpt }\n        </Paragraph>\n      </TitleContainer>\n    </PostContainer>\n  );\n}\n\nconst PostContainer = styled.article`\n  display: flex;\n  margin-bottom: 32px;\n\n  ${Heading3} {\n    margin-top: 4px;\n  }\n`;\nconst DateContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: flex-start;\n  justify-content: flex-end;\n  padding: 8px 16px 8px 8px;\n`;\nconst TitleContainer = styled.div`\n  flex: 5;\n`;\n\nexport default BlogListItem;","import * as React from \"react\"\nimport styled from 'styled-components'\nimport { Heading1 } from \"../Typography\"\nimport { A } from \"../Link\"\n\nconst BlogHeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n\n  @media (max-width: 767px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`\n\nconst RSSLink = styled(A)`\n  margin: 4px 0;\n  \n`\n\nexport default function BlogHeader() {\n\n  return (\n    <BlogHeaderContainer>\n      <Heading1>Latest publishings</Heading1>\n      <RSSLink href=\"/rss.xml\" target=\"blank\">RSS feed</RSSLink>\n    </BlogHeaderContainer>\n  )\n  \n}","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Container, { ContainerContent } from \"../../components/Container\";\nimport DefaultLayout from \"../../layouts\";\nimport BlogListItem from \"../../components/Blog/BlogListItem\";\nimport BlogHeader from \"../../components/Blog/BlogHeader\";\n\ninterface BlogPageProps {\n  data: {\n    allMarkdownRemark: {\n      edges: [{\n        node: {\n          id: string,\n          frontmatter: {\n            path: string,\n            title: string,\n            date: string,\n            excerpt: string\n          }\n        }\n      }]\n    }\n  }\n}\n\nconst BlogPage = ({data}: BlogPageProps) => {\n  const { edges: posts  } = data.allMarkdownRemark;\n  return (\n    <DefaultLayout>\n      <Container narrow>\n        <ContainerContent>\n          <BlogHeader />\n\n          { posts.map(({node}) =>  <BlogListItem \n              path={node.frontmatter.path}\n              title={node.frontmatter.title}\n              date={node.frontmatter.date}\n              excerpt={node.frontmatter.excerpt}\n              key={node.frontmatter.date}\n            />\n          ) }\n        </ContainerContent>\n      </Container>\n    </DefaultLayout>\n  );\n};\n\nexport default BlogPage;\n\nexport const pageQuery = graphql`\n  query BlogListQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}