{"version":3,"sources":["webpack:///./src/components/Typography.tsx","webpack:///./src/templates/blogPost.tsx"],"names":["Paragraph","styled","span","p","Heading1","h1","Heading3","h2","h3","BlogPostTemplate","post","data","markdownRemark","title","frontmatter","meta","name","content","excerpt","ogImage","narrow","className","dangerouslySetInnerHTML","__html","html"],"mappings":"6FAAA,sHAMaA,GAJcC,IAAOC,KAAV,8EAAGD,CAAH,mCAICA,IAAOE,EAAV,4EAAGF,CAAH,oEAMTG,EAAWH,IAAOI,GAAV,2EAAGJ,CAAH,MAERK,GADWL,IAAOM,GAAV,2EAAGN,CAAH,MACGA,IAAOO,GAAV,2EAAGP,CAAH,Q,kCCdrB,+GAuBe,SAASQ,EAAT,GAAyD,IAC9CC,EAD8C,EAA9BC,KAChCC,eACR,OACE,gBAAC,IAAD,KACE,gBAAC,SAAD,CACEC,MAAK,GAAKH,EAAKI,YAAYD,MAC3BE,KAAM,CACJ,CACEC,KAAM,cACNC,QAASP,EAAKI,YAAYI,SAE5B,CACEF,KAAM,iBACNC,QAASP,EAAKI,YAAYI,SAE5B,CACEF,KAAM,WACNC,QAASP,EAAKI,YAAYK,YAIhC,gBAAC,IAAD,CAAWC,QAAM,GACf,gBAAC,IAAD,KACE,gBAAC,IAAD,KAAYV,EAAKI,YAAYD,OAE/B,uBACEQ,UAAU,oBACVC,wBAAyB,CAAEC,OAAQb,EAAKc","file":"component---src-templates-blog-post-tsx-844d4e3bb98d6cb14404.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const LineThrough = styled.span`\n  text-decoration: line-through;\n`;\n\nexport const Paragraph = styled.p`\n  font-family: 'Lora', serif;\n  line-height: 1.8rem;\n  font-size: 1.1rem;\n`;\n\nexport const Heading1 = styled.h1``;\nexport const Heading2 = styled.h2``;\nexport const Heading3 = styled.h3``;\n","import * as React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { graphql } from \"gatsby\";\n\nimport Container, { ContainerContent } from \"../components/Container\";\nimport DefaultLayout from \"../layouts\";\nimport { Heading1 } from \"../components/Typography\";\n\ninterface BlogPostTemplateProps {\n  data: {\n    markdownRemark: {\n      html: string\n      frontmatter: {\n        path: string,\n        title: string,\n        date: string,\n        excerpt: string,\n        ogImage: string\n      }\n    }\n  }\n}\n\nexport default function BlogPostTemplate({data}: BlogPostTemplateProps) {\n  const { markdownRemark: post } = data;\n  return (\n    <DefaultLayout>\n      <Helmet \n        title={`${post.frontmatter.title}`} \n        meta={[\n          {\n            name: \"description\",\n            content: post.frontmatter.excerpt\n          },\n          {\n            name: \"og:description\",\n            content: post.frontmatter.excerpt\n          },\n          {\n            name: \"og:image\",\n            content: post.frontmatter.ogImage\n          }\n        ]}\n      />\n      <Container narrow>\n        <ContainerContent>\n          <Heading1>{ post.frontmatter.title }</Heading1>\n          \n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n        </ContainerContent>\n      </Container>\n    </DefaultLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        excerpt\n        ogImage\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}